{
	"info": {
		"_postman_id": "12345678-1234-5678-9abc-123456789abc",
		"name": "Stock Buster API",
		"description": "Stock Buster serverless API for market data, movers, bars, forecasts, and WebSocket connections.\n\nBase URL: `{{BASE_URL}}`\nWebSocket URL: `{{WS_URL}}`\n\nSet these environment variables:\n- BASE_URL: https://your-api-id.execute-api.region.amazonaws.com/prod\n- WS_URL: wss://your-ws-id.execute-api.region.amazonaws.com/prod",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Market Movers",
			"item": [
				{
					"name": "Get Daily Movers (ASX)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/movers?period=DAILY&exchange=ASX&limit=20",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"movers"
							],
							"query": [
								{
									"key": "period",
									"value": "DAILY",
									"description": "DAILY, WEEKLY, MONTHLY"
								},
								{
									"key": "exchange",
									"value": "ASX",
									"description": "ASX, NASDAQ, LSE, etc."
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Max 100"
								}
							]
						},
						"description": "Get daily market movers for ASX exchange"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/movers?period=DAILY&exchange=ASX&limit=20",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"movers"
									],
									"query": [
										{
											"key": "period",
											"value": "DAILY"
										},
										{
											"key": "exchange",
											"value": "ASX"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"symbol\": \"BHP.AX\",\n      \"exchange\": \"ASX\",\n      \"sector\": \"Materials\",\n      \"price\": 45.20,\n      \"change\": 2.30,\n      \"changePercent\": 5.36,\n      \"volume\": 12500000,\n      \"rank\": 1,\n      \"timestamp\": \"2023-12-01T08:30:00Z\"\n    }\n  ],\n  \"timestamp\": \"2023-12-01T09:15:00Z\",\n  \"source\": \"stock-buster-api\",\n  \"message\": \"DAILY movers for ASX retrieved successfully\"\n}"
						}
					]
				},
				{
					"name": "Get Gainers Only",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/movers?exchange=NASDAQ&gainers=true&limit=10",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"movers"
							],
							"query": [
								{
									"key": "exchange",
									"value": "NASDAQ"
								},
								{
									"key": "gainers",
									"value": "true",
									"description": "Filter positive movers only"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get top gainers from NASDAQ"
					}
				},
				{
					"name": "Get Losers by Sector",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/movers?exchange=ASX&losers=true&sector=Technology&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"movers"
							],
							"query": [
								{
									"key": "exchange",
									"value": "ASX"
								},
								{
									"key": "losers",
									"value": "true",
									"description": "Filter negative movers only"
								},
								{
									"key": "sector",
									"value": "Technology",
									"description": "Filter by sector"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Get technology sector losers from ASX"
					}
				}
			],
			"description": "Market movers endpoints with various filters"
		},
		{
			"name": "Price Bars",
			"item": [
				{
					"name": "Get Daily Bars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/bars/BHP.AX?timeframe=daily&limit=30",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"bars",
								"BHP.AX"
							],
							"query": [
								{
									"key": "timeframe",
									"value": "daily",
									"description": "daily or intraday"
								},
								{
									"key": "limit",
									"value": "30",
									"description": "Number of bars"
								}
							]
						},
						"description": "Get daily OHLC bars for BHP.AX"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/bars/BHP.AX?timeframe=daily&limit=30",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"bars",
										"BHP.AX"
									],
									"query": [
										{
											"key": "timeframe",
											"value": "daily"
										},
										{
											"key": "limit",
											"value": "30"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"symbol\": \"BHP.AX\",\n      \"timestamp\": \"2023-12-01\",\n      \"open\": 43.50,\n      \"high\": 45.80,\n      \"low\": 43.20,\n      \"close\": 45.20,\n      \"volume\": 12500000\n    }\n  ],\n  \"timestamp\": \"2023-12-01T09:15:00Z\",\n  \"source\": \"stock-buster-api\",\n  \"message\": \"daily bars for BHP.AX retrieved successfully\"\n}"
						}
					]
				},
				{
					"name": "Get Intraday Bars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/bars/AAPL?timeframe=intraday&limit=100",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"bars",
								"AAPL"
							],
							"query": [
								{
									"key": "timeframe",
									"value": "intraday"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "Get intraday bars for AAPL"
					}
				},
				{
					"name": "Get Bars with Date Range",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/bars/CBA.AX?timeframe=daily&startDate=2023-11-01&endDate=2023-11-30",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"bars",
								"CBA.AX"
							],
							"query": [
								{
									"key": "timeframe",
									"value": "daily"
								},
								{
									"key": "startDate",
									"value": "2023-11-01",
									"description": "YYYY-MM-DD format"
								},
								{
									"key": "endDate",
									"value": "2023-11-30",
									"description": "YYYY-MM-DD format"
								}
							]
						},
						"description": "Get daily bars for CBA.AX in November 2023"
					}
				}
			],
			"description": "OHLC price bars endpoints"
		},
		{
			"name": "Forecasts",
			"item": [
				{
					"name": "Get Single Forecast",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/forecast/AAPL?horizon=30d",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"forecast",
								"AAPL"
							],
							"query": [
								{
									"key": "horizon",
									"value": "30d",
									"description": "1d, 7d, 30d, 90d"
								}
							]
						},
						"description": "Get 30-day forecast for AAPL"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/forecast/AAPL?horizon=30d",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"forecast",
										"AAPL"
									],
									"query": [
										{
											"key": "horizon",
											"value": "30d"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"symbol\": \"AAPL\",\n    \"target\": 195.00,\n    \"confidence\": 0.75,\n    \"horizon\": \"30d\",\n    \"timestamp\": \"2023-12-01T08:00:00Z\"\n  },\n  \"timestamp\": \"2023-12-01T09:15:00Z\",\n  \"source\": \"stock-buster-api\",\n  \"message\": \"30d forecast for AAPL retrieved successfully\"\n}"
						}
					]
				},
				{
					"name": "Get All Forecasts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/forecast/BHP.AX?all=true",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"forecast",
								"BHP.AX"
							],
							"query": [
								{
									"key": "all",
									"value": "true",
									"description": "Get all time horizons"
								}
							]
						},
						"description": "Get all forecast horizons for BHP.AX"
					}
				}
			],
			"description": "Price forecast endpoints"
		},
		{
			"name": "WebSocket",
			"item": [
				{
					"name": "Connect to WebSocket",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{WS_URL}}",
							"host": [
								"{{WS_URL}}"
							]
						},
						"description": "WebSocket connection endpoint. Use a WebSocket client to connect.\n\nConnection will be established and stored in metadata table."
					}
				}
			],
			"description": "WebSocket endpoints and message examples",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// WebSocket Message Examples:",
							"",
							"// 1. Subscribe to market movers",
							"// {",
							"//   \"action\": \"subscribe\",",
							"//   \"type\": \"movers\"",
							"// }",
							"",
							"// 2. Subscribe to specific ticker",
							"// {",
							"//   \"action\": \"subscribe\",",
							"//   \"symbol\": \"BHP.AX\"",
							"// }",
							"",
							"// 3. Unsubscribe from movers",
							"// {",
							"//   \"action\": \"unsubscribe\",",
							"//   \"type\": \"movers\"",
							"// }",
							"",
							"// 4. Ping server",
							"// {",
							"//   \"action\": \"ping\"",
							"// }",
							"",
							"// Expected responses:",
							"// - Subscription confirmations",
							"// - Real-time market data",
							"// - Pong responses"
						]
					}
				}
			]
		},
		{
			"name": "Health Check",
			"item": [
				{
					"name": "API Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/movers?limit=1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"movers"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"description": "Quick health check"
								}
							]
						},
						"description": "Quick API health check using movers endpoint"
					}
				}
			],
			"description": "Health check endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test to verify response structure",
					"pm.test(\"Response has required fields\", function () {",
					"    const jsonData = pm.response.json();",
					"    pm.expect(jsonData).to.have.property('timestamp');",
					"    pm.expect(jsonData).to.have.property('source');",
					"    ",
					"    if (pm.response.code === 200) {",
					"        pm.expect(jsonData).to.have.property('data');",
					"        pm.expect(jsonData).to.have.property('message');",
					"    } else {",
					"        pm.expect(jsonData).to.have.property('error');",
					"    }",
					"});",
					"",
					"// Check CORS headers",
					"pm.test(\"Has CORS headers\", function () {",
					"    pm.expect(pm.response.headers.get('Access-Control-Allow-Origin')).to.eql('*');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "https://your-api-id.execute-api.us-east-1.amazonaws.com/prod",
			"type": "string"
		},
		{
			"key": "WS_URL",
			"value": "wss://your-ws-id.execute-api.us-east-1.amazonaws.com/prod",
			"type": "string"
		}
	]
}